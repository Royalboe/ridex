version: 2.1
orbs: 
  slack: circleci/slack@4.12.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
    

defaults: 
  - &kubeImage
    docker:
      - image: royalboe/kube:1.0.0
  - &baseImage
    docker:
      - image: cimg/base:2022.09
  - &nImage
    docker:
      - image: 'cimg/python:3.10'
  
  - &terraformImage
    docker:
      - image: hashicorp/terraform:1.0.0

commands:
  connect-eks-to-kubectl:
    steps:
      - run:
          name: Connect to eks
          command: |
            aws eks update-kubeconfig --region us-east-1 --name royalboe-eks-vpc-cluster

  deploy-ingress:
    steps:
      - run:
          command: |
            kubectl apply -f deploy.yaml
          name: Deploy ingress controller
   


jobs:
  build-base-image:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker --version
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t royalboe/kube:1.0.0 .circleci/.
            docker push royalboe/kube:1.0.0
      # - notify_slack_success
      # - notify_slack_error
    
  build-application-images:
    <<: *baseImage
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.18
      - run:
          name: Build notes application images
          command: |
            docker --version #print the version for logging
            docker image build -t royalboe/ridex .
      
      - run:
          name: Login
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin            

      - run:
          name: Push application images
          command: |
            docker push royalboe/ridex:latest
      
  configure-infra:
      <<: *terraformImage
      steps: 
      - checkout
      - run:
          name: Configure infrastructure
          command: |
            cd .circleci/terraform-cluster
            terraform init
            terraform apply -auto-approve


workflows:
  default:
    jobs:
      - build-base-image
      - build-application-image:
         requires: 
            - build-base-image
